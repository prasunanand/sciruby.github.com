<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GSOC | SciRuby]]></title>
  <link href="http://sciruby.com/blog/categories/gsoc/atom.xml" rel="self"/>
  <link href="http://sciruby.com/"/>
  <updated>2014-02-25T16:59:41-05:00</updated>
  <id>http://sciruby.com/</id>
  <author>
    <name><![CDATA[SciRuby]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Ruby Science Foundation selected for GSoC 2014]]></title>
    <link href="http://sciruby.com/blog/2014/02/24/gsoc-2014/"/>
    <updated>2014-02-24T21:45:00-05:00</updated>
    <id>http://sciruby.com/blog/2014/02/24/gsoc-2014</id>
    <content type="html"><![CDATA[<p>We're excited to announce that the Ruby Science Foundation has been selected as
a mentoring organization for <a href="https://www.google-melange.com/gsoc/homepage/google/gsoc2014">Google Summer of Code 2014</a>!</p>

<p>Last year
was our first year as a mentoring organization, and we had a great group of
students working with us on machine learning, timeseries statistics, the
semantic web, and scientific plotting.</p>

<p>This year we've got a super set of
possible projects including more flexible matrix computations, automatic Ruby
interface generation for scientific libraries, a dataframe library for
structuring and manipulating datasets, interactive plotting, a scientific
notebook, high-performance minimization and integration libraries, and a
semantic web datastore backend for scientific computing.</p>

<p>If you're interested in applying as a student, learning more, or even
contributing independent of GSoC, head over to our <a href="https://github.com/SciRuby/sciruby/wiki/Google-Summer-of-Code-2014-Ideas">GSoC 2014 ideas page</a>
to see what projects we think are great.  Don't hesitate to tell us if you've
got an amazing idea for a different project, too! If you're still left
wondering where to start, check out the <a href="https://github.com/sciruby/nmatrix/issues">issue tracker for NMatrix</a>, the matrix computation
library used as the basis for a number of our projects, and our top priority at
the moment.</p>

<p>Good luck to all the GSoC applicants out there, and happy coding!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some words from GSoC 2013 alumni]]></title>
    <link href="http://sciruby.com/blog/2014/01/28/gsoc-alumni/"/>
    <updated>2014-01-28T16:07:00-05:00</updated>
    <id>http://sciruby.com/blog/2014/01/28/gsoc-alumni</id>
    <content type="html"><![CDATA[<p>In 2013, SciRuby was a mentoring organization for the Google Summer of Code. We
asked our alumni students:</p>

<p>1) How did you experience GSoC/SciRuby and what has it brought you?</p>

<p>2) What advice would you give new applicants?</p>

<p>Monica Dragan from Romania worked on <a href="https://github.com/monicadragan/GeneValidator">gene validation</a>, see also her
<a href="http://gene-prediction.blogspot.nl/2013/08/start-using-our-gene-validation-tool.html">blog</a>. Actually, Monica
was part of a different GSoC organisation,
<a href="http://informatics.nescent.org/wiki/Phyloinformatics_Summer_of_Code_2013">PhyloSoC</a>,
but also participated in our Ruby-centric meetings and code reviews. She shared
her SciRuby GSoC experience:</p>

<p class="note"><strong>Monica:</strong>
During the GSoC period I developed a bioinformatics tool written in Ruby. First of all I learned a new programming
language, as I had no experience with Ruby before. On this GSoC occasion I had the opportunity to get in touch with the
community and I met people passionate about their work, with whom I continued
 the collaboration afterwards. But what I really gained from this experience is that I increased my enthusiasm about
 bioinformatics and I confirmed myself that this is the field I want to focus on in the next years.
</p>


<p>Alberto Arrigoni from Italy worked on <a href="http://sciruby.com/blog/2013/09/24/gsoc-2013-data-mining-in-jruby-with-ruby-band/">data mining and machine learning algorithms for Ruby</a> and shared
his GSoC experience:</p>

<p class="note"><strong>Alberto:</strong>
As a PhD student in the field of bioinformatics, my GSOC experience was very exciting and useful at different levels. On a training level, I had the
unique chance to learn more in depth some topics of machine learning I had
wanted to explore in the past, but never had quite the opportunity or the
resources. On a more technical level, I appreciated the support of the GSOC
mentors and the Sciruby community, which counts numerous experts and a very
active mailing list.
</p>


<p>Ankur Goel from India worked on
<a href="http://rubygems.org/gems/statsample-timeseries">statsample-timeseries</a> for Ruby.
Ankur shared,</p>

<p class="note"><strong>Ankur:</strong>
It was the best learning experience. I learnt quite a lot of statistics while
working on my TimeSeries extension; after GSoC, I picked up Machine Learning
course and I was able to relate it to very easily after working on regression
techniques in GLM extension. I can't thank enough for the opportunity provided
and the trust endowed by my mentor on me. Learning to write quality code and
getting reviews was a cherry on cake! 
</p>


<p>Will Strinz from Madison, USA, worked on <a href="http://localhost:4000/blog/2013/10/12/ruby-and-the-semantic-web-rdf-sparql-publisci/">RDF generators for Ruby</a> for the
semantic web:</p>

<p class="note"><strong>Will:</strong>
GSoC 2013 was a new experience for me in terms of managing my own time,
planning my own project, and keeping up consistent interaction with my mentors
across time zones. Despite a decent amount of prior experience with Ruby, it
was also a challenge and an opportunity for me to really understand the tools
and practices I knew, and learn to use the ones I wasn't familiar with.

As for what it's brought me, aside from a job I secured partly through skills
and project portfolio I gained during GSoC, and the power of knowing how to do
just about any programming task using Ruby, I learned a lot about how to manage
a project and interact with people in the real world.

Communicating properly and in a timely manner over email and other asynchronous
services is absolutely critical to the work I do now, and a lot harder than
people make it out to be. Staying in touch with my mentors and making sure we
were all on the same page about my project was something I spent a lot of time
on, and in doing so I gained a lot of comfort with the process.

Additionally, GSoC was my first true experience designing a large piece of
software, where I couldn't just give up and trash it when the code started
getting messy or confusing. It really forced me to adopt good practices around
testing and organization, especially since I had better programmers than myself
looking over my work.

Software architecture is something you just don't learn in college level CS
courses, and by the time I'd graduated, I'd started hearing a lot of my CS
professors saying this too. Some day in the future, maybe soon, there will be
classes taught about just this subject, but for now there's no better way to
learn about it than by working on a real project, with some accountability and
motivation to actually get it done.


</p>


<p>Our alumni give new GSoC applicants the following advice:</p>

<p class="note"><strong>Monica:</strong>
GSoC is a great experience that you should try as a student! What is cool about GSoC is that you work on the project you are keen on and manage your time as
 you wish. Also, working remotely involves additional challenges. In the end you improve your experience and get to know a lot of new and great people.

</p>




<p class="note"><strong>Alberto:</strong>

I think one of the best features offered by the GSOC is the possibility to
collaborate with (and learn from) people who share the same scientific
interests and have very different backgrounds and skills. Though this may be
somewhat 'expected' for mentors, I was also lucky to find other GSOC students
willing to bond and share experiences and opinions. My advice is to be
cooperative and try to learn as much as possible from/with them!  

</p>




<p class="note"><strong>Ankur:</strong>
Work really hard. Do your homework before you ask questions or before quoting
anything in proposal. Writing a good proposal is necessary, and you must really
be aware of what you are writing - a good research is necessary. SciRuby
community members are readily available to help you at mailing list and #sciruby channel. A thorough discussion with the mentor will help you out.
</p>




<p class="note"><strong>Will:</strong>
To new applicants this year I'd stress one thing above all else; get in
touch with people on the sciruby mailing list. Introduce yourself as soon as
possible, and start discussing your project ideas when you have something in
mind. People on the mailing list are very friendly and helpful, so don't be
afraid to start a conversation, but also expect constructive criticism of your
proposals.

Answering any questions or concerns promptly and thoroughly not only shows that
your know your stuff and are passionate about your project, it also shows that
you are a good fit for GSoC in general. Don't assume you're in just because
you've had a good dialogue, but plan and communicate as though you are; don't
wait for the project to start to fill in details or contact your prospective
mentors personally.

Once you've submitted a proposal, all of this goes double. The closer you get
to the deadline, the less time there will be to polish your application and
respond to questions, so make sure you're doing it quickly and effectively.
</p>


<p>Our SciRuby GSoC alumni added:</p>

<p class="note"><strong>Monica:</strong>
If I don't join this year, I wish you good luck with the new students!
</p>




<p class="note"><strong>Ankur:</strong>
I will be happy to sign up again as student, this year!
</p>




<p class="note"><strong>Will:</strong>
I know I've said this already, but GSoC last year was a defining moment in my
path to becoming a software developer, career-wise sure, but more importantly
in the coder vs hacker vs computer scientist vs software developer sense. If
there's anything I can do to get involved this year, I'll be available.<p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Statistics with Ruby: Time Series and General Linear Models]]></title>
    <link href="http://sciruby.com/blog/2013/11/07/statistics-with-ruby-time-series-and-general-linear-models/"/>
    <updated>2013-11-07T13:15:00-05:00</updated>
    <id>http://sciruby.com/blog/2013/11/07/statistics-with-ruby-time-series-and-general-linear-models</id>
    <content type="html"><![CDATA[<p class="note"><strong>Editor's Note:</strong> This is the third of four blog posts detailing our Google Summer of
Code 2013 students' work, edited by John Woods.</p>


<h2>Introduction</h2>

<p><a href="https://github.com/clbustos/statsample/">Statsample</a> is a basic and advanced statistics suite in Ruby. It attempts to
support JRuby and MRI/YARV equally, and also provides pure Ruby implementations for many functions.</p>

<p>Statsample is the perfect library for anyone who is (a) interested in exploring statistical aspects and (b) even a little
familiar (or interested) in Ruby.</p>

<p>It includes a rich API, except for problems involving time series and generalized linear models (GLM), for which the functionality
was rather basic.</p>

<p>So, in this <a href="https://www.google-melange.com/gsoc/homepage/google/gsoc2013">Google Summer of Code 2013</a> program, working
on the SciRuby Project, I released two extensions:</p>

<ul>
<li><a href="http://github.com/ankurgel/statsample-timeseries">Statsample TimeSeries</a></li>
<li><a href="https://github.com/AnkurGel/statsample-glm">Statsample GLM</a></li>
</ul>


<p>These gems aim to take Statsample further and incorporate various functionalities and estimation techniques on continuous data.</p>

<h2>Statsample TimeSeries</h2>

<p><a href="https://rubygems.org/gems/statsample-glm"><em>Statsample TimeSeries</em></a> is equipped with a variety of operations, which are directly available on the <code>Series</code> object. A few of those
functionalities are:</p>

<ul>
<li>_<a href="http://en.wikipedia.org/wiki/Autocorrelation">Autocorrelation</a> of series: For finding repeating patterns (like a periodic signal) in noisy data or for
identifying persistence (if it rained today, will it rain tomorrow?).</li>
<li><a href="http://en.wikipedia.org/wiki/Autoregressive_moving_average_model">Autoregressive and Moving Average</a>: Autoregressive
models (AR and ARMA) are useful for describing random processes such as found in nature and economics believed to be
predictable from past behavior (e.g., El Niño, the stock market).</li>
<li><a href="http://en.wikipedia.org/wiki/Partial_autocorrelation_function">Partial autocorrelation</a>
with Yule&ndash;Walker, a method for calculating the coefficients of autoregressive models.</li>
<li><a href="http://en.wikipedia.org/wiki/Levinson_recursion">Levinson&ndash;Durbin</a> estimation: for <a href="http://www.mathworks.com/help/dsp/ref/levinsondurbin.html">solving linear equations</a>
involving a <a href="http://en.wikipedia.org/wiki/Toeplitz_matrix">Toeplitz matrix</a>, such as in signal processing or cyclic signals.</li>
<li><a href="http://en.wikipedia.org/wiki/Kalman_filter">Kalman filtering</a> (or linear quadratic estimation): often used for
determining position and motion of a moving object based on sensor information (e.g., for drawing a vehicle's position
on a map using GPS data, or for aircraft or spacecraft navigation based on sensor inputs)</li>
<li>Moving averages, differences and autocovariances.</li>
</ul>


<p>To get your hands dirty,</p>

<ul>
<li> Install Statsample with <code>gem install statsample</code>.</li>
<li> Next, install the TimeSeries extension with <code>gem install statsample-timeseries</code>.</li>
</ul>


<p>Now, let's make a simple <code>TimeSeries</code> object: <br/>
```ruby
require 'statsample-timeseries'
include Statsample::TimeSeries # Enable the DSL</p>

<h1>Create a randomized timeseries of 100 continuous elements</h1>

<p>ts = 100.times.map { rand(100) }</p>

<h1>Get the autocorrelation of the series</h1>

<p>ts.acf</p>

<h1>Get the partial autocorrelation of the series</h1>

<p>ts.pacf</p>

<h1>Partial autocorrelation with 11 lags by maximum likelihood estimation</h1>

<p>ts.pacf(11, 'mle')</p>

<h1>autoregressive coefficients:</h1>

<p>ts.ar</p>

<h1>ARIMA(2, 1, 1)</h1>

<p>k_obj = TimeSeries.arima(ts, 2, 1, 1)
k_obj.ar #Gives autoregressive coefficients
k_obj.ma #Gives moving average coefficients</p>

<p>```
You can go through the <a href="http://rubydoc.info/gems/statsample-timeseries/0.0.3/frames">documentation and API for more information</a>.</p>

<h2>Statsample GLM</h2>

<p><a href="https://rubygems.org/gems/statsample-glm"><em>Statsample GLM</em></a> includes many helpful regression techniques, which can be used for regression analysis on data.
Some of those techniques are:</p>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Poisson_regression">Poisson Regression</a>: used to model contingency tables and counts</li>
<li><a href="http://en.wikipedia.org/wiki/Logistic_regression">Logistic Regression</a>: among other things, predicts patient outcomes in medicine based on
categorical data (age, test results, etc.); and predicts how someone will vote in an election using demographic information</li>
<li>Exponential Regression: one case of <a href="http://en.wikipedia.org/wiki/Nonlinear_regression">nonlinear regression</a> (examples
might include the <a href="http://mathbits.com/MathBits/TISection/Statistics2/exponential.htm">temperature of a cup of coffee</a> left
in a cold room, or the decay of an orbit)</li>
<li><a href="http://en.wikipedia.org/wiki/Iteratively_reweighted_least_squares">Iteratively Reweighted Least Squares</a>: used to
mitigate the effects of outliers</li>
</ul>


<p>The top level module for regression techniques is <code>Statsample::Regression</code>.</p>

<p>Using it is as simple as ever:</p>

<pre><code>  * First, install `statsample` by `gem install statsample`.
  * Then, install GLM by `gem install `statsample-glm`.
</code></pre>

<p>Let's get started:</p>

<p>```ruby
require 'statsample-glm'</p>

<h1>Create the datasets:</h1>

<p>x1 = Statsample::Vector.new([0.537322309644812,-0.717124209978434,-0.519166718891331,0.434970973986765,-0.761822002215759,1.51170030921189,0.883854199811195,-0.908689798854196,1.70331977539793,-0.246971150634099,-1.59077593922623,-0.721548040910253,0.467025703920194,-0.510132788447137,0.430106510266798,-0.144353683251536,-1.54943800728303,0.849307651309298,-0.640304240933579,1.31462478279425,-0.399783455165345,0.0453055645017902,-2.58212161987746,-1.16484414309359,-1.08829266466281,-0.243893919684792,-1.96655661929441,0.301335373291024,-0.665832694463588,-0.0120650855753837,1.5116066367604,0.557300353673344,1.12829931872045,0.234443748015922,-2.03486690662651,0.275544751380246,-0.231465849558696,-0.356880153225012,-0.57746647541923,1.35758352580655,1.23971669378224,-0.662466275100489,0.313263561921793,-1.08783223256362,1.41964722846899,1.29325100940785,0.72153880625103,0.440580131022748,0.0351917814720056, -0.142353224879252],:scale)
x2 = Statsample::Vector.new([-0.866655707911859,-0.367820249977585,0.361486610435,0.857332626245179,0.133438466268095,0.716104533073575,1.77206093023382,-0.10136697295802,-0.777086491435508,-0.204573554913706,0.963353531412233,-1.10103024900542,-0.404372761837392,-0.230226345183469,0.0363730246866971,-0.838265540390497,1.12543549657924,-0.57929175648001,-0.747060244805248,0.58946979365152,-0.531952663697324,1.53338594419818,0.521992029051441,1.41631763288724,0.611402316795129,-0.518355638373296,-0.515192557101107,-0.672697937866108,1.84347042325327,-0.21195540664804,-0.269869371631611,0.296155694010096,-2.18097898069634,-1.21314663927206,1.49193669881581,1.38969280369493,-0.400680808117106,-1.87282814976479,1.82394870451051,0.637864732838274,-0.141155946382493,0.0699950644281617,1.32568550595165,-0.412599258349398,0.14436832227506,-1.16507785388489,-2.16782049922428,0.24318371493798,0.258954871320764,-0.151966534521183],:scale)</p>

<p>y = Statsample::Vector.new([0,0,1,0,1,1,1,1,0,1,1,1,1,0,1,0,1,1,0,1,0,1,1,1,1,0,0,1,1,0,0,1,0,0,1,1,0,0,1,1,0,1,1,1,1,0,0,0,1,1],:scale)</p>

<p>x = Statsample::Dataset.new({"i"=>intercept,"x1"=>x1,"x2"=>x2})</p>

<p>obj = Statsample::Regression.glm(x, y, :binomial)</p>

<h1>=> Returns logistic regression object</h1>

<p>```
The <a href="http://rubydoc.info/gems/statsample-glm/Statsample/Regression">documentation and API details is available here</a></p>

<p>We have some more plans for GLM module. First in the list is to make the algorithms work with singular value decomposition,
because manual inversion of matrices is not fun for larger values in a Poisson regression.</p>

<h2>Conclusion</h2>

<p>I have <a href="http://ankurgoel.com">blogged about most of the functionalities</a>; additional information is available there.</p>

<p>Please explore and use the libraries; I eagerly await your input, suggestions and questions. Feel free to leave
any questions on <a href="http://github.com/SciRuby/statsample-glm/issues">the Statsample GLM tracker</a> or
<a href="[the%20Statsample%20GLM%20tracker](http://github.com/SciRuby/statsample-glm/issues">the Statsample TimeSeries tracker</a>.</p>

<p>I had an amazing summer!</p>

<p>Stay tuned and Enjoy.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Call for funding: more women needed in open source science software]]></title>
    <link href="http://sciruby.com/blog/2013/11/01/call-for-funding-more-women-needed-in-open-source-science-software/"/>
    <updated>2013-11-01T16:24:00-04:00</updated>
    <id>http://sciruby.com/blog/2013/11/01/call-for-funding-more-women-needed-in-open-source-science-software</id>
    <content type="html"><![CDATA[<p><a href="http://www.ncwit.org/blog/did-you-know-demographics-technical-women">Women make up 51% of the American workforce, and yet only 20% of software engineers are female.</a> Worldwide,
the situation is similar. <a href="http://www.networkworld.com/community/node/58218">In open source software engineering, the statistics are worse: only 1.5&ndash;5% are female.</a></p>

<p>One of the organizations which presented at the Google Summer of Code Mentor Summit was the <a href="http://gnome.org/opw/">GNOME Foundation's Outreach Program for Women</a> (OPW). OPW is
similar to GSoC, except that OPW doesn't require its applicants to be
students &mdash; or know how to program when the coding period begins. The pay is competitive with GSoC. And of course,
only women can apply.</p>

<p>In the process of our Google Code-In 2013 application, I recruited several female mentors to work with female GCI
students &mdash; not a requirement, but I think it helps to have supportive people involved with whom one can identify. Unfortunately,
we weren't selected for the Code-In (not too disappointing given <a href="https://groups.google.com/forum/#!topic/gci-announce/P73dzsxKdsM">the several venerable and accomplished organizations that were chosen</a>). But we want to have another go, this
time by applying for the Outreach Program for Women.</p>

<p>Here's where we need your help.</p>

<p>Work for a company that might want to support this goal? Show this to your boss. Have him or her get in touch with
us (sciruby.project at gmail dot com).</p>

<p>If you don't work for such a company, but would still like to help, you can also get in touch at the same email address.
As a general rule of thumb, <a href="https://pledgie.com/campaigns/15783">you can always donate via Pledgie</a>, even if you don't
have access to tons of money.</p>

<p>By the way, <a href="/blog/2013/10/25/mentoring-future-computational-power-women-for-gci-2013/">here's a blog post by one of our mentors, Anna Belak</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mentoring future computational power women for GCI 2013]]></title>
    <link href="http://sciruby.com/blog/2013/10/25/mentoring-future-computational-power-women-for-gci-2013/"/>
    <updated>2013-10-25T14:09:00-04:00</updated>
    <id>http://sciruby.com/blog/2013/10/25/mentoring-future-computational-power-women-for-gci-2013</id>
    <content type="html"><![CDATA[<p>My name is Anna, and I'm an engineer and a scientist. I study Materials Science and Engineering at the University of
Michigan; and I graduated from Virginia Tech with a degree in Physics. My thesis project deals with computationally
predicting the properties of materials used in lithium-ion batteries and airplane turbine blades.</p>

<p><img src="http://sciruby.com/images/anna_belak.jpg" title="Anna Belak coding like a boss" /></p>

<p>I'm writing this blog post for SciRuby, but I'm really writing it for the young women out there. SciRuby is applying to
participate in <a href="https://developers.google.com/open-source/gci/">Google's Code-In 2013</a>, which aims to get high school
students involved in the open source movement, and specifically in coding. It's great preparation for college and
beyond — whatever you might choose to study.</p>

<p>I became involved in science because I love figuring stuff out and working with smart, interesting people, and I want
you to get involved, too. Modern science wouldn't be possible without open source software. Moreover, if you learn how
to code, you'll always have a job. Always.</p>

<p>And the cool part is that you don't have to know how to code in order to participate. Many of the tasks involve research
and documentation in science and mathematics — which is a great way to obtain valuable experience for college
applications.</p>
]]></content>
  </entry>
  
</feed>
