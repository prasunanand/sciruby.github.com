<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GSOC | SciRuby]]></title>
  <link href="http://sciruby.com/blog/categories/gsoc/atom.xml" rel="self"/>
  <link href="http://sciruby.com/"/>
  <updated>2014-06-04T12:49:07-04:00</updated>
  <id>http://sciruby.com/</id>
  <author>
    <name><![CDATA[SciRuby]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Introduction to the Minimization and Integration project]]></title>
    <link href="http://sciruby.com/blog/2014/06/04/introduction-to-the-minimization-and-integration-project/"/>
    <updated>2014-06-04T14:23:00-04:00</updated>
    <id>http://sciruby.com/blog/2014/06/04/introduction-to-the-minimization-and-integration-project</id>
    <content type="html"><![CDATA[<p class="note"><strong>Editor's Note:</strong> We have two students
working on numerical minimization and integration this summer, Rajat and
Lahiru. Lahiru will be writing a separate post about his work.</p>


<h2>Introduction to the Minimization and Integration Project</h2>

<p>Hi. My name is Rajat Kapoor and I have been selected to work with
SciRuby for Google Summer of Code 2014.</p>

<p><a href="https://github.com/SciRuby/minimization">Minimization</a> and
<a href="https://github.com/SciRuby/integration">Integration</a> are two of the
many available gems in the SciRuby suite. My project this year aims to
improve these gems to replicate the functionality provided by GNU's
GSL. I will be trying to implement all the minimization and
integration algorithms present in GSL in pure Ruby, with improvements
as needed, so that these functions are easily accesible to all Ruby
users, while the users which have GSL already installed will have an
advantage in terms of speedy computations.</p>

<h2>What Minimization and Integration actually mean</h2>

<p>Minimization refers to the process of finding out the minimum of a
mathematical function whose values might depend on multiple
variables. Unidimensional minimization restricts these problems to
functions of one single variable. Integration is the same as the very
widely used concept in calculus which basically boils down to finding
the summation of the value of a function at small intervals, when the
width of the intervals in infinitesimally small. I can bet that you
knowingly or unknowingly use both these things on a daily basis.</p>

<h2>The plan</h2>

<p>The project can be broken into two major parts: Minimization and
Integration, as these are two seperate gems.</p>

<p>The Minimization gem can be broken in two parts: unidimensional (or
univariate) and multidimensional (multivariate). With respect to
coding, these two can again be broken down into sub-parts: pure Ruby
implementations and GSL support. The Integration gem will include
the pure Ruby implementations as well as GSL support. Along with this,
some support for symbolic integration will be added for JRuby
users by way of the JScience library.</p>

<h2>Progress</h2>

<p>The pure Ruby implementations of the unidimensional minimization part
are almost finished. I am also working on the GSL support for the same
along with it. I plan to finish up any unidimensional minimization
work by the end of this week and start the work with multidimensional
minimization methods.</p>

<p>Keep watching this blog for more updates regarding my project.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducing the FFTW SciRuby GSoC project]]></title>
    <link href="http://sciruby.com/blog/2014/06/04/introducing-the-fftw-sciruby-gsoc-project/"/>
    <updated>2014-06-04T12:30:00-04:00</updated>
    <id>http://sciruby.com/blog/2014/06/04/introducing-the-fftw-sciruby-gsoc-project</id>
    <content type="html"><![CDATA[<p>My name is Magdalen Berns and I am a physics student with a technical
background in live audio. I am particularly interested in using science
and technology to improve access for all.</p>

<p>This summer, I will be working on implementing the external library
appropriately named "Fastest Fourier Transform in the West" version 3
(FFTW3) C and Fortran API in Ruby for this year's Google Summer of Code
(GSoC).</p>

<p>The primary aim of the project is to give SciRuby the capability to
handle signal analysis, processing and synthesis by performing discrete
fast Fourier transform operations on NMatrix objects.</p>

<p>After some investigation during the preparation stages of GSoC, it was
determined that implementing FFTW3 is more desirable than starting from
scratch in pure Ruby because the FFTW3 API is already extensively used,
developed, and optimised far beyond what would be achievable in just
three months. So, putting FFTW3 in the driving seat allows the SciRuby
project to take advantage of the good work of the FFTW3 developers by
bringing it to Ruby.</p>

<p>Putting NMatrix to the test with FFTW3 should give users the
opportunity to test drive NMatrix &mdash; and SciRuby's NMatrix developers a
chance to root out bugs.</p>

<p>Since a gem called ruby-fftw3 already existed to perform FFTW3 operations
on NArray objects, I forked that repository as a starting point. <a href="https://github.com/thisMagpie/fftw">Things are progressing on my Github fork</a> right now.</p>

<p>My mentor for this project is Colin Fuller who is an exceptionally
talented programmer &mdash; and he really knows his git too. He has been a
great help as I adapt to the learning curve of working in C and
Ruby (languages which I am less familiar with than say, Java or
JavaScript).</p>

<p>As I work, I intend to share useful gems of information I gather. Those, in addition to my weekly project updates, will appear right here in this blog so others can hopefully benefit.</p>

<p>I have already posted a few useful bits and bobs on
<a href="http://thismagpie.com">thismagpie.com</a> which relate to my work so far.
I hope to add those to the SciRuby blog, too, provided
the readers are interested in that and time permits. Of course, readers here can feel free to have a browse
of the keywords <a href="http://thismagpie.com/keyword/sciruby">sciruby</a>,
<a href="http://thismagpie.com/keyword/ruby">ruby</a> and
<a href="http://thismagpie.com/keyword/git">git</a> on there for the time being.
I sometimes add posts, manuals and tutorials from external sites where I
find useful ones on the web too, so watch out for these too.</p>

<p>Please, feel free to watch or follow along as the project comes together
and those inclined are welcome to share constructive comments and advice
or raise bugs on the fftw3 issue tracker. Input about my work is very
welcome as the project progresses. This gem is being written for the
community, after all!</p>

<p>You can find me on Twitter (Facebook) or GitHub under the username @thisMagpie.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introducing the GSoC 2014 D3 Project]]></title>
    <link href="http://sciruby.com/blog/2014/06/02/introducing-gsoc-2014-the-d3-project/"/>
    <updated>2014-06-02T14:00:00-04:00</updated>
    <id>http://sciruby.com/blog/2014/06/02/introducing-gsoc-2014-the-d3-project</id>
    <content type="html"><![CDATA[<p>Hello. I am Naoki, one of four Google Summer of Code (GSoC) 2014
students in SciRuby. Let me introduce my project. The goal of the GSoC
2014 D3 Project is to create a new plotting library for
SciRuby. <a href="http://d3js.org/">D3.js</a> is the most suitable JavaScript
library to achieve this goal.</p>

<p>There are several non-Ruby plotting software libraries in the wild,
like ggplot, matplotlib, and ggplot2. Actually, SciRuby already has
its own plotting libraries named
<a href="https://github.com/SciRuby/plotrb">Plotrb</a> and
<a href="https://github.com/SciRuby/rubyvis">Rubyvis</a>. The main feature of my
project compared with those software packages is <em>interactivity</em>.
Interactivity has various meanings here: interactivity when generating
plots, interactivity when viewing them, and server&ndash;client
interactivity. My project includes all of those.</p>

<p>My project can be divided into two components, one JavaScript and the
other Ruby. JavaScript serves as a back-end, and Ruby as a
front-end. I'm currently working on the former part. Have a look at a
few examples I've assembled:</p>

<ul>
<li><a href="http://bl.ocks.org/domitry/b8785f02f36deef567ce">Multiple panes</a></li>
<li><a href="http://bl.ocks.org/domitry/2f53781449025f772676">Bar chart</a></li>
<li><a href="http://bl.ocks.org/domitry/e9a914b78f3a576ed3bb">Line</a></li>
<li><a href="http://bl.ocks.org/domitry/308e27d8d12c1374e61f">Scatter</a></li>
<li><a href="http://bl.ocks.org/domitry/f215d5ff3bd3f5fec2ad">Another theme</a></li>
</ul>


<p>This project involves a number of challenges, but I believe it to be
achievable during this Summer of Code. Thank you for reading!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Science Foundation selected for GSoC 2014]]></title>
    <link href="http://sciruby.com/blog/2014/02/24/gsoc-2014/"/>
    <updated>2014-02-24T21:45:00-05:00</updated>
    <id>http://sciruby.com/blog/2014/02/24/gsoc-2014</id>
    <content type="html"><![CDATA[<p>We're excited to announce that the Ruby Science Foundation has been selected as
a mentoring organization for <a href="https://www.google-melange.com/gsoc/homepage/google/gsoc2014">Google Summer of Code 2014</a>!</p>

<p>Last year
was our first year as a mentoring organization, and we had a great group of
students working with us on machine learning, timeseries statistics, the
semantic web, and scientific plotting.</p>

<p>This year we've got a super set of
possible projects including more flexible matrix computations, automatic Ruby
interface generation for scientific libraries, a dataframe library for
structuring and manipulating datasets, interactive plotting, a scientific
notebook, high-performance minimization and integration libraries, and a
semantic web datastore backend for scientific computing.</p>

<p>If you're interested in applying as a student, learning more, or even
contributing independent of GSoC, head over to our <a href="https://github.com/SciRuby/sciruby/wiki/Google-Summer-of-Code-2014-Ideas">GSoC 2014 ideas page</a>
to see what projects we think are great.  Don't hesitate to tell us if you've
got an amazing idea for a different project, too! If you're still left
wondering where to start, check out the <a href="https://github.com/sciruby/nmatrix/issues">issue tracker for NMatrix</a>, the matrix computation
library used as the basis for a number of our projects, and our top priority at
the moment.</p>

<p>Good luck to all the GSoC applicants out there, and happy coding!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Some words from GSoC 2013 alumni]]></title>
    <link href="http://sciruby.com/blog/2014/01/28/gsoc-alumni/"/>
    <updated>2014-01-28T16:07:00-05:00</updated>
    <id>http://sciruby.com/blog/2014/01/28/gsoc-alumni</id>
    <content type="html"><![CDATA[<p>In 2013, SciRuby was a mentoring organization for the Google Summer of Code. We
asked our alumni:</p>

<p>1) How did you experience GSoC/SciRuby and what has it brought you?</p>

<p>2) What advice would you give new applicants?</p>

<p>Monica Dragan from Romania worked on <a href="https://github.com/monicadragan/GeneValidator">gene validation</a>, see also her
<a href="http://gene-prediction.blogspot.nl/2013/08/start-using-our-gene-validation-tool.html">blog</a>. Actually, Monica
was part of a different GSoC organisation,
<a href="http://informatics.nescent.org/wiki/Phyloinformatics_Summer_of_Code_2013">PhyloSoC</a>,
but also participated in our Ruby-centric meetings and code reviews. She shared
her SciRuby GSoC experience:</p>

<p class="note"><strong>Monica:</strong>
During the GSoC period I developed a bioinformatics tool written in Ruby. First of all I learned a new programming
language, as I had no experience with Ruby before. On this GSoC occasion I had the opportunity to get in touch with the
community and I met people passionate about their work, with whom I continued
 the collaboration afterwards. But what I really gained from this experience is that I increased my enthusiasm about
 bioinformatics and I confirmed myself that this is the field I want to focus on in the next years.
</p>


<p>Alberto Arrigoni from Italy worked on <a href="http://sciruby.com/blog/2013/09/24/gsoc-2013-data-mining-in-jruby-with-ruby-band/">data mining and machine learning algorithms for Ruby</a> and shared
his GSoC experience:</p>

<p class="note"><strong>Alberto:</strong>
As a PhD student in the field of bioinformatics, my GSOC experience was very exciting and useful at different levels. On a training level, I had the
unique chance to learn more in depth some topics of machine learning I had
wanted to explore in the past, but never had quite the opportunity or the
resources. On a more technical level, I appreciated the support of the GSOC
mentors and the Sciruby community, which counts numerous experts and a very
active mailing list.
</p>


<p>Ankur Goel from India worked on
<a href="http://rubygems.org/gems/statsample-timeseries">statsample-timeseries</a> for Ruby.
Ankur shared,</p>

<p class="note"><strong>Ankur:</strong>
It was the best learning experience. I learnt quite a lot of statistics while
working on my TimeSeries extension; after GSoC, I picked up Machine Learning
course and I was able to relate it to very easily after working on regression
techniques in GLM extension. I can't thank enough for the opportunity provided
and the trust endowed by my mentor on me. Learning to write quality code and
getting reviews was a cherry on cake! 
</p>


<p>Will Strinz from Madison, USA, worked on <a href="http://localhost:4000/blog/2013/10/12/ruby-and-the-semantic-web-rdf-sparql-publisci/">RDF generators for Ruby</a> for the
semantic web:</p>

<p class="note"><strong>Will:</strong>
GSoC 2013 was a new experience for me in terms of managing my own time,
planning my own project, and keeping up consistent interaction with my mentors
across time zones. Despite a decent amount of prior experience with Ruby, it
was also a challenge and an opportunity for me to really understand the tools
and practices I knew, and learn to use the ones I wasn't familiar with.

As for what it's brought me, aside from a job I secured partly through skills
and project portfolio I gained during GSoC, and the power of knowing how to do
just about any programming task using Ruby, I learned a lot about how to manage
a project and interact with people in the real world.

Communicating properly and in a timely manner over email and other asynchronous
services is absolutely critical to the work I do now, and a lot harder than
people make it out to be. Staying in touch with my mentors and making sure we
were all on the same page about my project was something I spent a lot of time
on, and in doing so I gained a lot of comfort with the process.

Additionally, GSoC was my first true experience designing a large piece of
software, where I couldn't just give up and trash it when the code started
getting messy or confusing. It really forced me to adopt good practices around
testing and organization, especially since I had better programmers than myself
looking over my work.

Software architecture is something you just don't learn in college level CS
courses, and by the time I'd graduated, I'd started hearing a lot of my CS
professors saying this too. Some day in the future, maybe soon, there will be
classes taught about just this subject, but for now there's no better way to
learn about it than by working on a real project, with some accountability and
motivation to actually get it done.


</p>


<p>Our alumni give new GSoC applicants the following advice:</p>

<p class="note"><strong>Monica:</strong>
GSoC is a great experience that you should try as a student! What is cool about GSoC is that you work on the project you are keen on and manage your time as
 you wish. Also, working remotely involves additional challenges. In the end you improve your experience and get to know a lot of new and great people.

</p>




<p class="note"><strong>Alberto:</strong>

I think one of the best features offered by the GSOC is the possibility to
collaborate with (and learn from) people who share the same scientific
interests and have very different backgrounds and skills. Though this may be
somewhat 'expected' for mentors, I was also lucky to find other GSOC students
willing to bond and share experiences and opinions. My advice is to be
cooperative and try to learn as much as possible from/with them!  

</p>




<p class="note"><strong>Ankur:</strong>
Work really hard. Do your homework before you ask questions or before quoting
anything in proposal. Writing a good proposal is necessary, and you must really
be aware of what you are writing - a good research is necessary. SciRuby
community members are readily available to help you at mailing list and #sciruby channel. A thorough discussion with the mentor will help you out.
</p>




<p class="note"><strong>Will:</strong>
To new applicants this year I'd stress one thing above all else; get in
touch with people on the sciruby mailing list. Introduce yourself as soon as
possible, and start discussing your project ideas when you have something in
mind. People on the mailing list are very friendly and helpful, so don't be
afraid to start a conversation, but also expect constructive criticism of your
proposals.

Answering any questions or concerns promptly and thoroughly not only shows that
your know your stuff and are passionate about your project, it also shows that
you are a good fit for GSoC in general. Don't assume you're in just because
you've had a good dialogue, but plan and communicate as though you are; don't
wait for the project to start to fill in details or contact your prospective
mentors personally.

Once you've submitted a proposal, all of this goes double. The closer you get
to the deadline, the less time there will be to polish your application and
respond to questions, so make sure you're doing it quickly and effectively.
</p>


<p>Our SciRuby GSoC alumni added:</p>

<p class="note"><strong>Monica:</strong>
If I don't join this year, I wish you good luck with the new students!
</p>




<p class="note"><strong>Ankur:</strong>
I will be happy to sign up again as student, this year!
</p>




<p class="note"><strong>Will:</strong>
I know I've said this already, but GSoC last year was a defining moment in my
path to becoming a software developer, career-wise sure, but more importantly
in the coder vs hacker vs computer scientist vs software developer sense. If
there's anything I can do to get involved this year, I'll be available.<p>

]]></content>
  </entry>
  
</feed>
